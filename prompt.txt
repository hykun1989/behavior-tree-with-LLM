Enviroment Overview:
You are in control of an autonomous vehicle, referred to as the 'ego car', navigating a busy highway. The prime directive for the ego car is to maximize its speed while ensuring a collision-free journey amidst other vehicles.

Available Actions (ACTIONS_ALL):
The ego car can perform the following actions:

0: 'change_lane_left' - Move the ego car to the left lane.
1: 'idle' - Keep the ego car's speed constant.
2: 'change_lane_right' - Move the ego car to the right lane.
3: 'increase_speed' - Accelerate the ego car.
4: 'slower' - Decelerate the ego car.
Available Functions (FUNCTIONS_ALL):
The ego car has access to the following functions to assess its environment:

'check_traffic_ahead' - Ensure the road ahead is safe for a speed increase.
'check_right_lane_safe' - Verify if the adjacent right lane is safe for a lane change.
'check_left_lane_safe' - Verify if the adjacent left lane is safe for a lane change.
'check_need_to_slow' - Determine if slowing down is necessary due to traffic ahead.
'check_need_to_idle' - Ascertain if maintaining the current speed is safe given the traffic conditions.
Restrictions:
Your strategy should only utilize the above-mentioned actions and functions to formulate the behavior tree. Some of these actions might not be always available.

Example:
Here are the example source tasks in behavior tree architecture:
Task: change wheel for a car
Procedure:{
    Do phase 1:{
        Do phase 1-1:{
            "put_car_at_conveyor"
        }Do phase 1-2 if 1-1 success:{
            "lift_car"
        }
    }Do phase 2 if 1 success:{
        Do phase 2-1:{
            "pick_wheel"
        }Do phase 2-2 if 2-1 success:{
            "approach_conveyor"
        }
    }Do phase 3 if 2 success:{
        Do phase 3-1 at the same time:{
            "align_wheel_in_x_axis"
            "align_wheel_in_y_axis"
        }
    }Do phase 4 if 3 success:{
        Do phase 4-1:{
            "insert_screws"
        }Do phase 4-2 if 4-1 success:{
            "fasten_screws"
        }
    }Do phase 5 if 4 success:{
        Do phase 5-1:{
            "leave_conveyor"
        }
    }
}

Task: Take off and fly to the desired destination. After reach the destination, go home.
Procedure:{
    Do phase 1:{
        Do phase 1-1:{
            "already_visited_destination"
        }Do phase 1-2 if 1-1 success:{
            "already_at_home"
        }Do phase 1-3 if 1-2 success:{
            "land"
        }
    }Do phase 2 if 1 failed:{
        Do phase 2-1:{
            Do phase 2-1-1:{
                "already_in_the_air"
            }Do phase 2-1-2 if 2-1-1 success:{
                "takeoff"
            }
        }Do phase 2-2 if 2-1 success:{
            Do phase 2-2-1:{
                "already_visited_destination"
            }Do phase 2-2-2 if 2-2-1 success:{
                "go_to_destination"
            }
        }Do phase 2-3 if 2-2 success:{
            Do phase 2-3-1:{
                "already_at_home"
            }Do phase 2-3-2 if 2-3-1 success:{
                "go_home"
            }
        }
    } 
}

Task:
Let think step by step. Devise a behavior tree structure to maximize the ego car speed by changing lanes left and right frequently while ensuring a collision-free journey amidst other vehicles.
You don't like to keep raw speed of car.

Hint:
The format of the behavior tree is the same as before. And you are restricted to output only the behavior tree without any others.
